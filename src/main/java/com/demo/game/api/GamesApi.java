/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen Do not edit the class manually.
 */
package com.demo.game.api;

import com.demo.game.api.model.Game;
import com.demo.game.api.model.PlayStatus;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.servlet.http.HttpServletRequest;
import java.io.IOException;
import java.util.Optional;

@Api(value = "games", description = "the games API")
public interface GamesApi {

  Logger log = LoggerFactory.getLogger(GamesApi.class);

  default Optional<ObjectMapper> getObjectMapper() {
    return Optional.empty();
  }

  default Optional<HttpServletRequest> getRequest() {
    return Optional.empty();
  }

  default Optional<String> getAcceptHeader() {
    return getRequest().map(r -> r.getHeader("Accept"));
  }

  @ApiOperation(
      value = "Create Game",
      nickname = "createGame",
      notes = "",
      response = Game.class,
      tags = {})
  @ApiResponses(value = {@ApiResponse(code = 201, message = "OK", response = Game.class)})
  @RequestMapping(
      value = "/games",
      produces = {"application/json"},
      consumes = {"application/json"},
      method = RequestMethod.POST)
  default ResponseEntity<Game> createGame() {
    if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
      if (getAcceptHeader().get().contains("application/json")) {
        try {
          return new ResponseEntity<>(
              getObjectMapper()
                  .get()
                  .readValue(
                      "{  \"id\" : 1234,  \"uri\" : \"http://<host>:<port>/games/1234\"}",
                      Game.class),
              HttpStatus.NOT_IMPLEMENTED);
        } catch (IOException e) {
          log.error("Couldn't serialize response for content type application/json", e);
          return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
        }
      }
    } else {
      log.warn(
          "ObjectMapper or HttpServletRequest not configured in default GamesApi interface so no example is generated");
    }
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }

  @ApiOperation(
      value = "Make a pit move by using game_id",
      nickname = "makePitMove",
      notes = "Make a pit move by using game_id",
      response = PlayStatus.class,
      tags = {})
  @ApiResponses(value = {@ApiResponse(code = 200, message = "OK", response = PlayStatus.class)})
  @RequestMapping(
      value = "/games/{game_id}/pits/{pit_id}",
      produces = {"application/json"},
      consumes = {"application/json"},
      method = RequestMethod.PUT)
  default ResponseEntity<PlayStatus> makePitMove(
      @ApiParam(value = "Game id", required = true) @PathVariable("game_id") Integer gameId,
      @ApiParam(value = "Pit id", required = true) @PathVariable("pit_id") Integer pitId) {
    if (getObjectMapper().isPresent() && getAcceptHeader().isPresent()) {
      if (getAcceptHeader().get().contains("application/json")) {
        try {
          return new ResponseEntity<>(
              getObjectMapper().get().readValue("\"\"", PlayStatus.class),
              HttpStatus.NOT_IMPLEMENTED);
        } catch (IOException e) {
          log.error("Couldn't serialize response for content type application/json", e);
          return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
        }
      }
    } else {
      log.warn(
          "ObjectMapper or HttpServletRequest not configured in default GamesApi interface so no example is generated");
    }
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }
}
